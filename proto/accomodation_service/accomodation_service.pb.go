// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.3
// source: accomodation_service.proto

package accomodation

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAccommodationRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetAccommodationRecommendationsRequest) Reset() {
	*x = GetAccommodationRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationRecommendationsRequest) ProtoMessage() {}

func (x *GetAccommodationRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*GetAccommodationRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccommodationRecommendationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetAccommodationRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accomodations []*Accomodation `protobuf:"bytes,1,rep,name=accomodations,proto3" json:"accomodations,omitempty"`
}

func (x *GetAccommodationRecommendationsResponse) Reset() {
	*x = GetAccommodationRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccommodationRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccommodationRecommendationsResponse) ProtoMessage() {}

func (x *GetAccommodationRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccommodationRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*GetAccommodationRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAccommodationRecommendationsResponse) GetAccomodations() []*Accomodation {
	if x != nil {
		return x.Accomodations
	}
	return nil
}

type CheckIfGuestHasReservationInPastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId  string `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`
	GuestId string `protobuf:"bytes,2,opt,name=guestId,proto3" json:"guestId,omitempty"`
}

func (x *CheckIfGuestHasReservationInPastRequest) Reset() {
	*x = CheckIfGuestHasReservationInPastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIfGuestHasReservationInPastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfGuestHasReservationInPastRequest) ProtoMessage() {}

func (x *CheckIfGuestHasReservationInPastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfGuestHasReservationInPastRequest.ProtoReflect.Descriptor instead.
func (*CheckIfGuestHasReservationInPastRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{2}
}

func (x *CheckIfGuestHasReservationInPastRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *CheckIfGuestHasReservationInPastRequest) GetGuestId() string {
	if x != nil {
		return x.GuestId
	}
	return ""
}

type CheckIfGuestHasReservationInPastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasReservation bool `protobuf:"varint,1,opt,name=hasReservation,proto3" json:"hasReservation,omitempty"`
}

func (x *CheckIfGuestHasReservationInPastResponse) Reset() {
	*x = CheckIfGuestHasReservationInPastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIfGuestHasReservationInPastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfGuestHasReservationInPastResponse) ProtoMessage() {}

func (x *CheckIfGuestHasReservationInPastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfGuestHasReservationInPastResponse.ProtoReflect.Descriptor instead.
func (*CheckIfGuestHasReservationInPastResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{3}
}

func (x *CheckIfGuestHasReservationInPastResponse) GetHasReservation() bool {
	if x != nil {
		return x.HasReservation
	}
	return false
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string `protobuf:"bytes,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location      string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Wifi          bool   `protobuf:"varint,4,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Kitchen       bool   `protobuf:"varint,5,opt,name=kitchen,proto3" json:"kitchen,omitempty"`
	AirCondition  bool   `protobuf:"varint,6,opt,name=airCondition,proto3" json:"airCondition,omitempty"`
	FreeParking   bool   `protobuf:"varint,7,opt,name=freeParking,proto3" json:"freeParking,omitempty"`
	AutoApproval  bool   `protobuf:"varint,8,opt,name=autoApproval,proto3" json:"autoApproval,omitempty"`
	Photos        []byte `protobuf:"bytes,9,opt,name=photos,proto3" json:"photos,omitempty"`
	MinGuests     string `protobuf:"bytes,10,opt,name=minGuests,proto3" json:"minGuests,omitempty"`
	MaxGuests     string `protobuf:"bytes,11,opt,name=maxGuests,proto3" json:"maxGuests,omitempty"`
	IDHost        string `protobuf:"bytes,12,opt,name=iDHost,proto3" json:"iDHost,omitempty"`
	PricePerGuest bool   `protobuf:"varint,13,opt,name=pricePerGuest,proto3" json:"pricePerGuest,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateRequest) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *CreateRequest) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *CreateRequest) GetAirCondition() bool {
	if x != nil {
		return x.AirCondition
	}
	return false
}

func (x *CreateRequest) GetFreeParking() bool {
	if x != nil {
		return x.FreeParking
	}
	return false
}

func (x *CreateRequest) GetAutoApproval() bool {
	if x != nil {
		return x.AutoApproval
	}
	return false
}

func (x *CreateRequest) GetPhotos() []byte {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *CreateRequest) GetMinGuests() string {
	if x != nil {
		return x.MinGuests
	}
	return ""
}

func (x *CreateRequest) GetMaxGuests() string {
	if x != nil {
		return x.MaxGuests
	}
	return ""
}

func (x *CreateRequest) GetIDHost() string {
	if x != nil {
		return x.IDHost
	}
	return ""
}

func (x *CreateRequest) GetPricePerGuest() bool {
	if x != nil {
		return x.PricePerGuest
	}
	return false
}

type GradeHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccomodationId string `protobuf:"bytes,6,opt,name=accomodationId,proto3" json:"accomodationId,omitempty"`
	UserId         string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName       string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	UserSurname    string `protobuf:"bytes,4,opt,name=userSurname,proto3" json:"userSurname,omitempty"`
	Grade          string `protobuf:"bytes,5,opt,name=grade,proto3" json:"grade,omitempty"`
}

func (x *GradeHostRequest) Reset() {
	*x = GradeHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeHostRequest) ProtoMessage() {}

func (x *GradeHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeHostRequest.ProtoReflect.Descriptor instead.
func (*GradeHostRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{5}
}

func (x *GradeHostRequest) GetAccomodationId() string {
	if x != nil {
		return x.AccomodationId
	}
	return ""
}

func (x *GradeHostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GradeHostRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GradeHostRequest) GetUserSurname() string {
	if x != nil {
		return x.UserSurname
	}
	return ""
}

func (x *GradeHostRequest) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location    string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	StartDate   string `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate     string `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	NumOfGuests string `protobuf:"bytes,4,opt,name=numOfGuests,proto3" json:"numOfGuests,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{6}
}

func (x *SearchRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *SearchRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *SearchRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *SearchRequest) GetNumOfGuests() string {
	if x != nil {
		return x.NumOfGuests
	}
	return ""
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GradeHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GradeHostResponse) Reset() {
	*x = GradeHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeHostResponse) ProtoMessage() {}

func (x *GradeHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeHostResponse.ProtoReflect.Descriptor instead.
func (*GradeHostResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{8}
}

func (x *GradeHostResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AutoApprovalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationId string `protobuf:"bytes,1,opt,name=accommodation_id,json=accommodationId,proto3" json:"accommodation_id,omitempty"`
}

func (x *AutoApprovalRequest) Reset() {
	*x = AutoApprovalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoApprovalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoApprovalRequest) ProtoMessage() {}

func (x *AutoApprovalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoApprovalRequest.ProtoReflect.Descriptor instead.
func (*AutoApprovalRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{9}
}

func (x *AutoApprovalRequest) GetAccommodationId() string {
	if x != nil {
		return x.AccommodationId
	}
	return ""
}

type AutoApprovalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoApproval bool `protobuf:"varint,1,opt,name=autoApproval,proto3" json:"autoApproval,omitempty"`
}

func (x *AutoApprovalResponse) Reset() {
	*x = AutoApprovalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoApprovalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoApprovalResponse) ProtoMessage() {}

func (x *AutoApprovalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoApprovalResponse.ProtoReflect.Descriptor instead.
func (*AutoApprovalResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{10}
}

func (x *AutoApprovalResponse) GetAutoApproval() bool {
	if x != nil {
		return x.AutoApproval
	}
	return false
}

type UpdateAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             string `protobuf:"bytes,1,opt,name=iD,proto3" json:"iD,omitempty"`
	StartDate      string `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate        string `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	AccomodationId string `protobuf:"bytes,4,opt,name=accomodationId,proto3" json:"accomodationId,omitempty"`
	Price          string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateAvailabilityRequest) Reset() {
	*x = UpdateAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvailabilityRequest) ProtoMessage() {}

func (x *UpdateAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*UpdateAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAvailabilityRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateAvailabilityRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UpdateAvailabilityRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UpdateAvailabilityRequest) GetAccomodationId() string {
	if x != nil {
		return x.AccomodationId
	}
	return ""
}

func (x *UpdateAvailabilityRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type UpdateAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateAvailabilityResponse) Reset() {
	*x = UpdateAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvailabilityResponse) ProtoMessage() {}

func (x *UpdateAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*UpdateAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAvailabilityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAllAccomodationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId string `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *GetAllAccomodationsRequest) Reset() {
	*x = GetAllAccomodationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccomodationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccomodationsRequest) ProtoMessage() {}

func (x *GetAllAccomodationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccomodationsRequest.ProtoReflect.Descriptor instead.
func (*GetAllAccomodationsRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetAllAccomodationsRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type Accomodation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location      string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Wifi          bool   `protobuf:"varint,4,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Kitchen       bool   `protobuf:"varint,5,opt,name=kitchen,proto3" json:"kitchen,omitempty"`
	AirCondition  bool   `protobuf:"varint,6,opt,name=airCondition,proto3" json:"airCondition,omitempty"`
	FreeParking   bool   `protobuf:"varint,7,opt,name=freeParking,proto3" json:"freeParking,omitempty"`
	AutoApproval  bool   `protobuf:"varint,8,opt,name=autoApproval,proto3" json:"autoApproval,omitempty"`
	Photos        []byte `protobuf:"bytes,9,opt,name=photos,proto3" json:"photos,omitempty"`
	MinGuests     string `protobuf:"bytes,10,opt,name=minGuests,proto3" json:"minGuests,omitempty"`
	MaxGuests     string `protobuf:"bytes,11,opt,name=maxGuests,proto3" json:"maxGuests,omitempty"`
	IdHost        string `protobuf:"bytes,12,opt,name=idHost,proto3" json:"idHost,omitempty"`
	PricePerGuest bool   `protobuf:"varint,13,opt,name=pricePerGuest,proto3" json:"pricePerGuest,omitempty"`
}

func (x *Accomodation) Reset() {
	*x = Accomodation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accomodation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accomodation) ProtoMessage() {}

func (x *Accomodation) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accomodation.ProtoReflect.Descriptor instead.
func (*Accomodation) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{14}
}

func (x *Accomodation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Accomodation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Accomodation) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Accomodation) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *Accomodation) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *Accomodation) GetAirCondition() bool {
	if x != nil {
		return x.AirCondition
	}
	return false
}

func (x *Accomodation) GetFreeParking() bool {
	if x != nil {
		return x.FreeParking
	}
	return false
}

func (x *Accomodation) GetAutoApproval() bool {
	if x != nil {
		return x.AutoApproval
	}
	return false
}

func (x *Accomodation) GetPhotos() []byte {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Accomodation) GetMinGuests() string {
	if x != nil {
		return x.MinGuests
	}
	return ""
}

func (x *Accomodation) GetMaxGuests() string {
	if x != nil {
		return x.MaxGuests
	}
	return ""
}

func (x *Accomodation) GetIdHost() string {
	if x != nil {
		return x.IdHost
	}
	return ""
}

func (x *Accomodation) GetPricePerGuest() bool {
	if x != nil {
		return x.PricePerGuest
	}
	return false
}

type RecommendedAccomodation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location      string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Wifi          bool   `protobuf:"varint,4,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Kitchen       bool   `protobuf:"varint,5,opt,name=kitchen,proto3" json:"kitchen,omitempty"`
	AirCondition  bool   `protobuf:"varint,6,opt,name=airCondition,proto3" json:"airCondition,omitempty"`
	FreeParking   bool   `protobuf:"varint,7,opt,name=freeParking,proto3" json:"freeParking,omitempty"`
	AutoApproval  bool   `protobuf:"varint,8,opt,name=autoApproval,proto3" json:"autoApproval,omitempty"`
	Photos        []byte `protobuf:"bytes,9,opt,name=photos,proto3" json:"photos,omitempty"`
	MinGuests     string `protobuf:"bytes,10,opt,name=minGuests,proto3" json:"minGuests,omitempty"`
	MaxGuests     string `protobuf:"bytes,11,opt,name=maxGuests,proto3" json:"maxGuests,omitempty"`
	IdHost        string `protobuf:"bytes,12,opt,name=idHost,proto3" json:"idHost,omitempty"`
	PricePerGuest bool   `protobuf:"varint,13,opt,name=pricePerGuest,proto3" json:"pricePerGuest,omitempty"`
	TotalPrice    string `protobuf:"bytes,14,opt,name=totalPrice,proto3" json:"totalPrice,omitempty"`
}

func (x *RecommendedAccomodation) Reset() {
	*x = RecommendedAccomodation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendedAccomodation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendedAccomodation) ProtoMessage() {}

func (x *RecommendedAccomodation) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendedAccomodation.ProtoReflect.Descriptor instead.
func (*RecommendedAccomodation) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{15}
}

func (x *RecommendedAccomodation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecommendedAccomodation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecommendedAccomodation) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *RecommendedAccomodation) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *RecommendedAccomodation) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *RecommendedAccomodation) GetAirCondition() bool {
	if x != nil {
		return x.AirCondition
	}
	return false
}

func (x *RecommendedAccomodation) GetFreeParking() bool {
	if x != nil {
		return x.FreeParking
	}
	return false
}

func (x *RecommendedAccomodation) GetAutoApproval() bool {
	if x != nil {
		return x.AutoApproval
	}
	return false
}

func (x *RecommendedAccomodation) GetPhotos() []byte {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *RecommendedAccomodation) GetMinGuests() string {
	if x != nil {
		return x.MinGuests
	}
	return ""
}

func (x *RecommendedAccomodation) GetMaxGuests() string {
	if x != nil {
		return x.MaxGuests
	}
	return ""
}

func (x *RecommendedAccomodation) GetIdHost() string {
	if x != nil {
		return x.IdHost
	}
	return ""
}

func (x *RecommendedAccomodation) GetPricePerGuest() bool {
	if x != nil {
		return x.PricePerGuest
	}
	return false
}

func (x *RecommendedAccomodation) GetTotalPrice() string {
	if x != nil {
		return x.TotalPrice
	}
	return ""
}

type GetAllAccomodationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accomodations []*Accomodation `protobuf:"bytes,1,rep,name=accomodations,proto3" json:"accomodations,omitempty"`
}

func (x *GetAllAccomodationsResponse) Reset() {
	*x = GetAllAccomodationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAccomodationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAccomodationsResponse) ProtoMessage() {}

func (x *GetAllAccomodationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAccomodationsResponse.ProtoReflect.Descriptor instead.
func (*GetAllAccomodationsResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetAllAccomodationsResponse) GetAccomodations() []*Accomodation {
	if x != nil {
		return x.Accomodations
	}
	return nil
}

type GetAllAvailabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccomodationId string `protobuf:"bytes,1,opt,name=accomodationId,proto3" json:"accomodationId,omitempty"`
}

func (x *GetAllAvailabilityRequest) Reset() {
	*x = GetAllAvailabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAvailabilityRequest) ProtoMessage() {}

func (x *GetAllAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*GetAllAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllAvailabilityRequest) GetAccomodationId() string {
	if x != nil {
		return x.AccomodationId
	}
	return ""
}

type GetOneAccomodationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccomodationId string `protobuf:"bytes,1,opt,name=accomodationId,proto3" json:"accomodationId,omitempty"`
}

func (x *GetOneAccomodationRequest) Reset() {
	*x = GetOneAccomodationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneAccomodationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneAccomodationRequest) ProtoMessage() {}

func (x *GetOneAccomodationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneAccomodationRequest.ProtoReflect.Descriptor instead.
func (*GetOneAccomodationRequest) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetOneAccomodationRequest) GetAccomodationId() string {
	if x != nil {
		return x.AccomodationId
	}
	return ""
}

type GetOneAccomodationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accomodation *Accomodation `protobuf:"bytes,1,opt,name=accomodation,proto3" json:"accomodation,omitempty"`
}

func (x *GetOneAccomodationResponse) Reset() {
	*x = GetOneAccomodationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneAccomodationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneAccomodationResponse) ProtoMessage() {}

func (x *GetOneAccomodationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneAccomodationResponse.ProtoReflect.Descriptor instead.
func (*GetOneAccomodationResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetOneAccomodationResponse) GetAccomodation() *Accomodation {
	if x != nil {
		return x.Accomodation
	}
	return nil
}

type Availability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartDate      string `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate        string `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	IdAccomodation string `protobuf:"bytes,4,opt,name=idAccomodation,proto3" json:"idAccomodation,omitempty"`
	Price          string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Availability) Reset() {
	*x = Availability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Availability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Availability) ProtoMessage() {}

func (x *Availability) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Availability.ProtoReflect.Descriptor instead.
func (*Availability) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{20}
}

func (x *Availability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Availability) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Availability) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Availability) GetIdAccomodation() string {
	if x != nil {
		return x.IdAccomodation
	}
	return ""
}

func (x *Availability) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type GetAllAvailabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Availabilities []*Availability `protobuf:"bytes,1,rep,name=availabilities,proto3" json:"availabilities,omitempty"`
}

func (x *GetAllAvailabilityResponse) Reset() {
	*x = GetAllAvailabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllAvailabilityResponse) ProtoMessage() {}

func (x *GetAllAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*GetAllAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetAllAvailabilityResponse) GetAvailabilities() []*Availability {
	if x != nil {
		return x.Availabilities
	}
	return nil
}

type AccomodationDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location      string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Wifi          bool   `protobuf:"varint,4,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Kitchen       bool   `protobuf:"varint,5,opt,name=kitchen,proto3" json:"kitchen,omitempty"`
	AirCondition  bool   `protobuf:"varint,6,opt,name=airCondition,proto3" json:"airCondition,omitempty"`
	FreeParking   bool   `protobuf:"varint,7,opt,name=freeParking,proto3" json:"freeParking,omitempty"`
	AutoApproval  bool   `protobuf:"varint,8,opt,name=autoApproval,proto3" json:"autoApproval,omitempty"`
	Photos        []byte `protobuf:"bytes,9,opt,name=photos,proto3" json:"photos,omitempty"`
	MinGuests     string `protobuf:"bytes,10,opt,name=minGuests,proto3" json:"minGuests,omitempty"`
	MaxGuests     string `protobuf:"bytes,11,opt,name=maxGuests,proto3" json:"maxGuests,omitempty"`
	IdHost        string `protobuf:"bytes,12,opt,name=idHost,proto3" json:"idHost,omitempty"`
	PricePerGuest bool   `protobuf:"varint,13,opt,name=pricePerGuest,proto3" json:"pricePerGuest,omitempty"`
	TotalPrice    string `protobuf:"bytes,14,opt,name=totalPrice,proto3" json:"totalPrice,omitempty"`
}

func (x *AccomodationDTO) Reset() {
	*x = AccomodationDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccomodationDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccomodationDTO) ProtoMessage() {}

func (x *AccomodationDTO) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccomodationDTO.ProtoReflect.Descriptor instead.
func (*AccomodationDTO) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{22}
}

func (x *AccomodationDTO) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccomodationDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccomodationDTO) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *AccomodationDTO) GetWifi() bool {
	if x != nil {
		return x.Wifi
	}
	return false
}

func (x *AccomodationDTO) GetKitchen() bool {
	if x != nil {
		return x.Kitchen
	}
	return false
}

func (x *AccomodationDTO) GetAirCondition() bool {
	if x != nil {
		return x.AirCondition
	}
	return false
}

func (x *AccomodationDTO) GetFreeParking() bool {
	if x != nil {
		return x.FreeParking
	}
	return false
}

func (x *AccomodationDTO) GetAutoApproval() bool {
	if x != nil {
		return x.AutoApproval
	}
	return false
}

func (x *AccomodationDTO) GetPhotos() []byte {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *AccomodationDTO) GetMinGuests() string {
	if x != nil {
		return x.MinGuests
	}
	return ""
}

func (x *AccomodationDTO) GetMaxGuests() string {
	if x != nil {
		return x.MaxGuests
	}
	return ""
}

func (x *AccomodationDTO) GetIdHost() string {
	if x != nil {
		return x.IdHost
	}
	return ""
}

func (x *AccomodationDTO) GetPricePerGuest() bool {
	if x != nil {
		return x.PricePerGuest
	}
	return false
}

func (x *AccomodationDTO) GetTotalPrice() string {
	if x != nil {
		return x.TotalPrice
	}
	return ""
}

type EmptyRequst struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequst) Reset() {
	*x = EmptyRequst{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequst) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequst) ProtoMessage() {}

func (x *EmptyRequst) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequst.ProtoReflect.Descriptor instead.
func (*EmptyRequst) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{23}
}

type AccomodationSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccommodationsDTO []*AccomodationDTO `protobuf:"bytes,1,rep,name=accommodationsDTO,proto3" json:"accommodationsDTO,omitempty"`
}

func (x *AccomodationSearchResponse) Reset() {
	*x = AccomodationSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accomodation_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccomodationSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccomodationSearchResponse) ProtoMessage() {}

func (x *AccomodationSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accomodation_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccomodationSearchResponse.ProtoReflect.Descriptor instead.
func (*AccomodationSearchResponse) Descriptor() ([]byte, []int) {
	return file_accomodation_service_proto_rawDescGZIP(), []int{24}
}

func (x *AccomodationSearchResponse) GetAccommodationsDTO() []*AccomodationDTO {
	if x != nil {
		return x.AccommodationsDTO
	}
	return nil
}

var File_accomodation_service_proto protoreflect.FileDescriptor

var file_accomodation_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x27, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5b, 0x0a, 0x27, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x50, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x28, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x50, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf9, 0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69,
	0x66, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69,
	0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x44, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x44, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x61, 0x64, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x72, 0x61, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x40, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75,
	0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0xa1,
	0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x36, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x22, 0xf8, 0x02, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x50, 0x61,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74,
	0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x64, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65,
	0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa3, 0x03, 0x0a, 0x17,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6b, 0x69,
	0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x69, 0x72,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65,
	0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x43, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x60, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x9b, 0x03, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6b, 0x69,
	0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x69, 0x72,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65,
	0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74,
	0x22, 0x69, 0x0a, 0x1a, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x44, 0x54, 0x4f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x52, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x54, 0x4f, 0x32, 0xc4, 0x0c, 0x0a, 0x14,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x22, 0x14, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xa2, 0x01, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22, 0x2e, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x64, 0x64, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x7b, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0x70, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a, 0x01,
	0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x7d, 0x12, 0x7f,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f,
	0x12, 0x1d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x61, 0x6c, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6a, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x46, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x7d, 0x12, 0xcc, 0x01, 0x0a, 0x20, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x50, 0x61, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x50, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x50, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x22,
	0x2e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x47, 0x75, 0x65, 0x73, 0x74, 0x48, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x50, 0x61, 0x73, 0x74, 0x3a,
	0x01, 0x2a, 0x12, 0x70, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0xbb, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a,
	0x01, 0x2a, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x58, 0x4d, 0x4c, 0x2d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_accomodation_service_proto_rawDescOnce sync.Once
	file_accomodation_service_proto_rawDescData = file_accomodation_service_proto_rawDesc
)

func file_accomodation_service_proto_rawDescGZIP() []byte {
	file_accomodation_service_proto_rawDescOnce.Do(func() {
		file_accomodation_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_accomodation_service_proto_rawDescData)
	})
	return file_accomodation_service_proto_rawDescData
}

var file_accomodation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_accomodation_service_proto_goTypes = []interface{}{
	(*GetAccommodationRecommendationsRequest)(nil),   // 0: accomodation.GetAccommodationRecommendationsRequest
	(*GetAccommodationRecommendationsResponse)(nil),  // 1: accomodation.GetAccommodationRecommendationsResponse
	(*CheckIfGuestHasReservationInPastRequest)(nil),  // 2: accomodation.CheckIfGuestHasReservationInPastRequest
	(*CheckIfGuestHasReservationInPastResponse)(nil), // 3: accomodation.CheckIfGuestHasReservationInPastResponse
	(*CreateRequest)(nil),                            // 4: accomodation.CreateRequest
	(*GradeHostRequest)(nil),                         // 5: accomodation.GradeHostRequest
	(*SearchRequest)(nil),                            // 6: accomodation.SearchRequest
	(*CreateResponse)(nil),                           // 7: accomodation.CreateResponse
	(*GradeHostResponse)(nil),                        // 8: accomodation.GradeHostResponse
	(*AutoApprovalRequest)(nil),                      // 9: accomodation.AutoApprovalRequest
	(*AutoApprovalResponse)(nil),                     // 10: accomodation.AutoApprovalResponse
	(*UpdateAvailabilityRequest)(nil),                // 11: accomodation.UpdateAvailabilityRequest
	(*UpdateAvailabilityResponse)(nil),               // 12: accomodation.UpdateAvailabilityResponse
	(*GetAllAccomodationsRequest)(nil),               // 13: accomodation.GetAllAccomodationsRequest
	(*Accomodation)(nil),                             // 14: accomodation.Accomodation
	(*RecommendedAccomodation)(nil),                  // 15: accomodation.RecommendedAccomodation
	(*GetAllAccomodationsResponse)(nil),              // 16: accomodation.GetAllAccomodationsResponse
	(*GetAllAvailabilityRequest)(nil),                // 17: accomodation.GetAllAvailabilityRequest
	(*GetOneAccomodationRequest)(nil),                // 18: accomodation.GetOneAccomodationRequest
	(*GetOneAccomodationResponse)(nil),               // 19: accomodation.GetOneAccomodationResponse
	(*Availability)(nil),                             // 20: accomodation.Availability
	(*GetAllAvailabilityResponse)(nil),               // 21: accomodation.GetAllAvailabilityResponse
	(*AccomodationDTO)(nil),                          // 22: accomodation.AccomodationDTO
	(*EmptyRequst)(nil),                              // 23: accomodation.EmptyRequst
	(*AccomodationSearchResponse)(nil),               // 24: accomodation.AccomodationSearchResponse
}
var file_accomodation_service_proto_depIdxs = []int32{
	14, // 0: accomodation.GetAccommodationRecommendationsResponse.accomodations:type_name -> accomodation.Accomodation
	14, // 1: accomodation.GetAllAccomodationsResponse.accomodations:type_name -> accomodation.Accomodation
	14, // 2: accomodation.GetOneAccomodationResponse.accomodation:type_name -> accomodation.Accomodation
	20, // 3: accomodation.GetAllAvailabilityResponse.availabilities:type_name -> accomodation.Availability
	22, // 4: accomodation.AccomodationSearchResponse.accommodationsDTO:type_name -> accomodation.AccomodationDTO
	4,  // 5: accomodation.AccommodationService.Create:input_type -> accomodation.CreateRequest
	11, // 6: accomodation.AccommodationService.UpdateAvailability:input_type -> accomodation.UpdateAvailabilityRequest
	6,  // 7: accomodation.AccommodationService.Search:input_type -> accomodation.SearchRequest
	13, // 8: accomodation.AccommodationService.GetAllAccomodations:input_type -> accomodation.GetAllAccomodationsRequest
	23, // 9: accomodation.AccommodationService.GetAccomodations:input_type -> accomodation.EmptyRequst
	9,  // 10: accomodation.AccommodationService.GetAutoApprovalForAccommodation:input_type -> accomodation.AutoApprovalRequest
	17, // 11: accomodation.AccommodationService.GetAllAvailability:input_type -> accomodation.GetAllAvailabilityRequest
	18, // 12: accomodation.AccommodationService.GetOneAccomodation:input_type -> accomodation.GetOneAccomodationRequest
	2,  // 13: accomodation.AccommodationService.CheckIfGuestHasReservationInPast:input_type -> accomodation.CheckIfGuestHasReservationInPastRequest
	5,  // 14: accomodation.AccommodationService.GradeHost:input_type -> accomodation.GradeHostRequest
	0,  // 15: accomodation.AccommodationService.GetAccommodationRecommendations:input_type -> accomodation.GetAccommodationRecommendationsRequest
	7,  // 16: accomodation.AccommodationService.Create:output_type -> accomodation.CreateResponse
	12, // 17: accomodation.AccommodationService.UpdateAvailability:output_type -> accomodation.UpdateAvailabilityResponse
	24, // 18: accomodation.AccommodationService.Search:output_type -> accomodation.AccomodationSearchResponse
	16, // 19: accomodation.AccommodationService.GetAllAccomodations:output_type -> accomodation.GetAllAccomodationsResponse
	16, // 20: accomodation.AccommodationService.GetAccomodations:output_type -> accomodation.GetAllAccomodationsResponse
	10, // 21: accomodation.AccommodationService.GetAutoApprovalForAccommodation:output_type -> accomodation.AutoApprovalResponse
	21, // 22: accomodation.AccommodationService.GetAllAvailability:output_type -> accomodation.GetAllAvailabilityResponse
	19, // 23: accomodation.AccommodationService.GetOneAccomodation:output_type -> accomodation.GetOneAccomodationResponse
	3,  // 24: accomodation.AccommodationService.CheckIfGuestHasReservationInPast:output_type -> accomodation.CheckIfGuestHasReservationInPastResponse
	8,  // 25: accomodation.AccommodationService.GradeHost:output_type -> accomodation.GradeHostResponse
	1,  // 26: accomodation.AccommodationService.GetAccommodationRecommendations:output_type -> accomodation.GetAccommodationRecommendationsResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_accomodation_service_proto_init() }
func file_accomodation_service_proto_init() {
	if File_accomodation_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_accomodation_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccommodationRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIfGuestHasReservationInPastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIfGuestHasReservationInPastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradeHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoApprovalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoApprovalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccomodationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accomodation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendedAccomodation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAccomodationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAvailabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneAccomodationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneAccomodationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Availability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllAvailabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccomodationDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequst); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accomodation_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccomodationSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accomodation_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_accomodation_service_proto_goTypes,
		DependencyIndexes: file_accomodation_service_proto_depIdxs,
		MessageInfos:      file_accomodation_service_proto_msgTypes,
	}.Build()
	File_accomodation_service_proto = out.File
	file_accomodation_service_proto_rawDesc = nil
	file_accomodation_service_proto_goTypes = nil
	file_accomodation_service_proto_depIdxs = nil
}
